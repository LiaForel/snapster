LOGIN METHOD:

Parameters (username : string, password : string, ip_address : string)

Return Value:

status_message : dict

status_message['status']
    a) 'success': indicates a successful login and session generation,
        token can be retrieved from status_message['token']
        redirect user to application page

    b) 'invalid': indicates the user entered invalid credentials, redirect them to login page and tell them to try again

    c)  'fail': the login procedure failed for one of several reasons, redirect user to login page and tell them
        to try again


-----------------------------------------------------------------------------------------------------------------------

REGISTER METHOD:

Parameters(username: string, email : string, password : string)

Return Value:

status_message : dict

status_message['status']
    a) 'success': indicates successful user registration, and session generation,
        token can be retrieved from status_message['token'],
        redirect user to application page

    b) 'user-added': indicates successful user registration but unsuccessful session generation
        redirect user to login page

    c) 'user-exists': the username entered by the user already exists

    c) 'fail': the registration procedure failed for one of several reasons, redirect user to registration page and tell
        them to try again

-----------------------------------------------------------------------------------------------------------------------

VALIDATE SESSION: 

Parameters(session toekn: string)

Return Value:

status_message['status']
    
    a) 'success': The user is still in a valid session, proceed with route logic
    b) 'invalid_token': The user's session_token is invalid, it may have expired, or the user tampered with it, 
        redirect to login page 
    c) 'fail': The session validation procedure failed due to an unknown reason, possible connection loss from 
        redis instance, redirect to login page


